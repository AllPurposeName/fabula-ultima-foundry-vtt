var __getOwnPropNames=Object.getOwnPropertyNames;var __esm=(fn,res)=>function(){return fn&&(res=(0,fn[__getOwnPropNames(fn)[0]])(fn=0)),res};var define_GLOBALPATHS_default,init_define_GLOBALPATHS=__esm({"<define:GLOBALPATHS>"(){define_GLOBALPATHS_default=[]}});init_define_GLOBALPATHS();init_define_GLOBALPATHS();var FU={};FU.attributes=["dexterity","insight","might","willpower"];FU.characterSubtype={pc:"ACTOR.SUBTYPE.PC",npc:"ACTOR.SUBTYPE.NPC"};FU.attributeDice={1:"1d6",2:"1d8",3:"1d10",4:"1d12"};FU.conditions=["dazed","enraged","poisoned","shaken","slow","weak"];FU.dataSetConfig={en:"dataset-en"};FU.itemTypes=["armor","artifact","helper","heroicSkill","quirk","monsterSkill","project","rawMaterial","shield","skill","spell","weapon"];var config_default=FU;init_define_GLOBALPATHS();init_define_GLOBALPATHS();function localizeString(string){try{let localeString=CONFIG.fbl.i18n[string];return localeString||(localeString=string),game.i18n.localize(localeString)}catch{return string}}var FabulaUltimaActor=class extends Actor{get actorProperties(){return this.system}get attributes(){return this.actorProperties.attribute}get conditions(){return this.actorProperties.condition}get consumables(){return this.actorProperties.consumable}get canAct(){return this.attributes?Object.entries(this.attributes).every(([key,attribute])=>attribute.value>0||attribute.max<=0||key==="empathy"):!1}get skills(){return this.actorProperties.skill}get willpower(){return this.actorProperties.bio?.willpower}get unlimitedPush(){return this.getFlag("forbidden-lands","unlimitedPush")??!1}getRollData(){return{alias:this.token?.name||this.name,actorId:this.id,actorType:this.type,canAct:this.canAct,sceneId:this.token?.parent.id,tokenId:this.token?.id,unlimitedPush:this.unlimitedPush}}getRollModifierOptions(...rollIdentifiers){if(!rollIdentifiers.length)return[];let itemModifiers=this.items.reduce((array,item)=>{let modifiers=item.getRollModifier(...rollIdentifiers);return modifiers&&(array=[...array,...modifiers]),array},[]);return rollIdentifiers.includes("dodge")&&(itemModifiers.push({name:localizeString("ROLL.STANDING_DODGE"),value:-2,active:!0}),itemModifiers.push({name:localizeString("ROLL.DODGE_SLASH"),value:2})),itemModifiers}async createEmbeddedDocuments(embeddedName,data,options){let newData=deepClone(data);Array.isArray(newData)||(newData=[newData]);let inlineRoll=/\[\[([d\d+\-*]+)\]\]/i,createRoll=async([_match,group])=>(await new Roll(group).roll()).total;for await(let entity of newData)if(entity.data){if(entity.data=await Object.entries(entity.data).reduce(async(obj,[key,value])=>{if(typeof value=="string"&&value.match(inlineRoll)){let result=await createRoll(inlineRoll.exec(value));value=value.replace(inlineRoll,result)}return{...await obj,[key]:value}},{}),!CONFIG.fbl.carriedItemTypes.includes(data.type))continue;entity.flags["forbidden-lands"]={state:"carried",...entity.flags["forbidden-lands"]}}return super.createEmbeddedDocuments(embeddedName,newData,options)}static async create(data,options){if(!data.img)switch(data.type){case"party":data.img="systems/forbidden-lands/assets/fbl-sun.webp";break;default:data.img=`systems/forbidden-lands/assets/fbl-${data.type}.webp`;break}super.create(data,options)}toggleCondition(conditionName){let conditionValue=this.conditions[conditionName].value,conditionLabel=this.conditions[conditionName].label,effect=this.effects.find(condition=>condition.getFlag("core","statusId")===conditionName);CONFIG.fbl.conditions.includes(conditionName)&&(this.update({[`system.condition.${conditionName}.value`]:!conditionValue}),conditionValue&&effect?this.deleteEmbeddedDocuments("ActiveEffect",[effect.id]):!conditionValue&&!effect&&this.createEmbeddedDocuments("ActiveEffect",{...CONFIG.fbl.activeEffects[conditionName],label:localizeString(conditionLabel)}))}rest(){let activeConditions=Object.entries(this.conditions??{}).filter(([_,value])=>value?.value),isBlocked=(...conditions)=>conditions.some(condition=>activeConditions.map(([key,_])=>key).includes(condition)),data={attribute:{agility:{value:isBlocked("thirsty")?this.attributes.agility.value:this.attributes.agility.max},strength:{value:isBlocked("thirsty","cold","hungry")?this.attributes.strength.value:this.attributes.strength.max},wits:{value:isBlocked("thirsty","cold","sleepy")?this.attributes.wits.value:this.attributes.wits.max},empathy:{value:isBlocked("thirsty")?this.attributes.empathy.value:this.attributes.empathy.max}}};this.conditions?.sleepy.value&&this.toggleCondition("sleepy"),this.update({data});let sleepyIndex=activeConditions.map(([key,_])=>key).indexOf("sleepy"),wasSleepy=sleepyIndex>-1;wasSleepy&&activeConditions.splice(sleepyIndex,1);let formatter=new Intl.ListFormat(game.i18n.lang,{style:"long"});ChatMessage.create({content:`<div class="forbidden-lands chat-item"><h3>${this.name}</h3><h4>${localizeString("ACTION.REST")}</h4>${wasSleepy?`<p>${this.name} ${localizeString("CONDITION.IS_NO_LONGER_SLEEPY")}.</p>`:""}${activeConditions.length?`<p>${this.name} ${localizeString("CONDITION.SUFFERING_FROM")} ${formatter.format(activeConditions.filter(([key,_])=>key!=="sleepy").map(([_,value])=>`<b>${localizeString(value.label)}</b>`))}.</p>`:""}</div>`,speaker:{actor:this},whisper:game.user.isGM?[game.user.id]:[]})}};init_define_GLOBALPATHS();init_define_GLOBALPATHS();function objectSearch(object,string){if(!validateObject(object)||!validateString(string))return;let result=Object.entries(object).find(entries=>entries[1]===string);return result?result[0]:null}function validateObject(object){return!!object&&typeof object=="object"&&!foundry.utils.isEmpty(object)}function validateString(string){return!!string&&typeof string=="string"}var FabulaUltimaItem=class extends Item{get ammo(){return this.itemProperties.ammo}get artifactDie(){return this.itemProperties.artifactBonus}get bonus(){return this.itemProperties.bonus?.value}get damage(){return this.itemProperties.damage}get category(){return this.itemProperties.category}get itemProperties(){return this.system}get isBroken(){return this.bonus<=0&&this.itemProperties.bonus.max>0}get parryPenalty(){return this.category==="melee"&&!this.itemProperties.features?.parrying?CONFIG.fbl.actionModifiers.parry:0}get range(){return this.itemProperties.range}get rollModifiers(){return this.itemProperties.rollModifiers}get state(){return this.getFlag("fabula-ultima","state")||""}getRollData(){return{ammo:this.ammo,artifactDie:this.artifactDie,value:this.bonus||0,category:this.category,damage:this.damage||0,isBroken:this.isBroken,itemId:this.id,label:this.name,name:this.name,range:this.range,type:this.type}}getRollModifier(...rollIdentifiers){if(foundry.utils.getType(this.rollModifiers)!=="Object")return;let modifiers=Object.values(this.rollModifiers).reduce((array,mod)=>{let match=rollIdentifiers.includes(objectSearch(CONFIG.fbl.i18n,mod.name)),state=this.getFlag("fabula-ultima","state"),isCarriedOrTalent=state==="equipped"||state==="carried"||!CONFIG.fbl.carriedItemTypes.includes(this.type);if(match&&isCarriedOrTalent){let value;return mod.value.match(/\d*d(?:8|10|12)/i)?value=mod.value.replace(/^\+/,""):mod.gearBonus?value=Number(this.bonus):value=Number(mod.value),value?[...array,{name:this.name,value:typeof value=="number"?value.toFixed():value,id:this.id,type:this.type,gearBonus:mod.gearBonus,active:value<0}]:array}else return array},[]);return rollIdentifiers.includes("parry")&&rollIdentifiers.includes(this.id)&&(this.parryPenalty&&modifiers.push({name:localizeString("WEAPON.FEATURES.PARRYING"),value:this.parryPenalty,active:!0}),this.itemProperties.features?.shield?modifiers.push({name:localizeString("ROLL.PARRY_NON_SLASH"),value:2}):(modifiers.push({name:localizeString("ROLL.PARRY_STAB"),value:-2,active:!0}),modifiers.push({name:localizeString("ROLL.PARRY_PUNCH"),value:2}))),modifiers}async sendToChat(){let itemData=this.toObject();itemData.img.includes("/mystery-man")&&(itemData.img=null),CONFIG.fbl.itemTypes.includes(itemData.type)&&(itemData[`is${itemData.type.capitalize()}`]=!0),itemData.showField={};for(let field of["Appearance","Description","Drawback","Effect"])itemData.system[field.toLowerCase()]&&!this.getFlag("fabula-ultima",field)&&(itemData.showField[field.toLowerCase()]=!0);itemData.hasRollModifiers=itemData.system.rollModifiers&&Object.values(itemData.system.rollModifiers).filter(mod=>!mod.gearBonus).length>0;let html=await renderTemplate("systems/fabula-ultima/templates/components/item-chatcard.hbs",itemData),chatData={user:game.userId,rollMode:game.settings.get("core","rollMode"),content:html};["gmroll","blindroll"].includes(chatData.rollMode)?chatData.whisper=ChatMessage.getWhisperRecipients("GM"):chatData.rollMode==="selfroll"&&(chatData.whisper=[game.user]);let message=await ChatMessage.create(chatData);if(itemData.isCriticalInjury){let content=$(message.data.content),limit=content.find("[data-type='limit']").text().trim(),healingTime=content.find("[data-type='healtime']").text().trim();itemData.system.limit=limit,itemData.system.healingTime=healingTime}await message.setFlag("fabula-ultima","itemData",itemData)}static async create(data,options){if(!data.img)switch(data.type){case"building":data.img="icons/svg/castle.svg";break}super.create(data,options)}};init_define_GLOBALPATHS();function preloadHandlebarsTemplates(){let templatePaths=define_GLOBALPATHS_default;return loadTemplates(templatePaths)}function registerHandlebarsHelpers(){Handlebars.registerHelper("skulls",function(current,max,block){for(var acc="",i=0;i<max;++i)block.data.index=i,block.data.damaged=i>=current,acc+=block.fn(this);return acc}),Handlebars.registerHelper("flps_enrich",function(content){return content=TextEditor.enrichHTML(content,{documents:!0,async:!1}),new Handlebars.SafeString(content)}),Handlebars.registerHelper("flps_capitalize",function(value){return typeof value=="string"&&value.length>0?value[0].toUpperCase()+value.slice(1):value}),Handlebars.registerHelper("flps_strconcat",function(){let args=Array.prototype.slice.call(arguments);return args.pop(),args.join("")}),Handlebars.registerHelper("damageType",function(type){switch(type=normalize(type,"blunt"),type){case"blunt":return game.i18n.localize("ATTACK.BLUNT");case"fear":return game.i18n.localize("ATTACK.FEAR");case"slash":return game.i18n.localize("ATTACK.SLASH");case"stab":return game.i18n.localize("ATTACK.STAB");case"other":return game.i18n.localize("ATTACK.OTHER")}}),Handlebars.registerHelper("armorPart",function(part){switch(part=normalize(part,"body"),part){case"body":return game.i18n.localize("ARMOR.BODY");case"head":return game.i18n.localize("ARMOR.HELMET");case"shield":return game.i18n.localize("ARMOR.SHIELD")}}),Handlebars.registerHelper("itemWeight",function(weight){switch(normalize(weight,"regular")){case"none":return game.i18n.localize("WEIGHT.NONE");case"tiny":return game.i18n.localize("WEIGHT.TINY");case"light":return game.i18n.localize("WEIGHT.LIGHT");case"regular":return game.i18n.localize("WEIGHT.REGULAR");case"heavy":return game.i18n.localize("WEIGHT.HEAVY");default:return weight}}),Handlebars.registerHelper("weaponCategory",function(category){switch(category=normalize(category,"melee"),category){case"melee":return game.i18n.localize("WEAPON.MELEE");case"ranged":return game.i18n.localize("WEAPON.RANGED")}}),Handlebars.registerHelper("weaponGrip",function(grip){switch(grip=normalize(grip,"1h"),grip){case"1h":return game.i18n.localize("WEAPON.1H");case"2h":return game.i18n.localize("WEAPON.2H")}}),Handlebars.registerHelper("weaponRange",function(range){switch(range=normalize(range,"arm"),range){case"arm":return game.i18n.localize("RANGE.ARM");case"near":return game.i18n.localize("RANGE.NEAR");case"short":return game.i18n.localize("RANGE.SHORT");case"long":return game.i18n.localize("RANGE.LONG");case"distant":return game.i18n.localize("RANGE.DISTANT")}}),Handlebars.registerHelper("talentType",function(type){switch(type=normalize(type,"general"),type){case"general":return game.i18n.localize("TALENT.GENERAL");case"kin":return game.i18n.localize("TALENT.KIN");case"profession":return game.i18n.localize("TALENT.PROFESSION")}}),Handlebars.registerHelper("isBroken",function(item){return parseInt(item.system.bonus.max,10)>0&&parseInt(item.system.bonus.value,10)===0?"broken":""}),Handlebars.registerHelper("formatRollModifiers",function(rollModifiers){let output=[];return Object.values(rollModifiers).filter(mod=>!mod.gearBonus).forEach(mod=>{let modName=game.i18n.localize(mod.name);output.push(`${modName} ${mod.value}`)}),output.join(", ")}),Handlebars.registerHelper("hasWeaponFeatures",function(weaponType,features){let meleeFeatures=["edged","pointed","blunt","parry","hook"],rangedFeatures=["slowReload"];if(features.others!=="")return!0;let weaponFeatures=[];weaponType==="melee"?weaponFeatures=meleeFeatures:weaponType==="ranged"&&(weaponFeatures=rangedFeatures);for(let feature in features)if(weaponFeatures.includes(feature)&&features[feature])return!0;return!1}),Handlebars.registerHelper("formatWeaponFeatures",function(weaponType,features){let output=[];return weaponType==="melee"?(features.edged&&output.push(game.i18n.localize("WEAPON.FEATURES.EDGED")),features.pointed&&output.push(game.i18n.localize("WEAPON.FEATURES.POINTED")),features.blunt&&output.push(game.i18n.localize("WEAPON.FEATURES.BLUNT")),features.parrying&&output.push(game.i18n.localize("WEAPON.FEATURES.PARRYING")),features.hook&&output.push(game.i18n.localize("WEAPON.FEATURES.HOOK"))):weaponType==="ranged"?features.slowReload&&output.push(game.i18n.localize("WEAPON.FEATURES.SLOW_RELOAD")):features.others?output.push(features.others):features&&output.push(features),output.join(", ")}),Handlebars.registerHelper("plaintextToHTML",function(value){return new Handlebars.SafeString(value.replace(/(<([^>]+)>)/gi,"").replace(/(?:\r\n|\r|\n)/g,"<br/>"))}),Handlebars.registerHelper("toUpperCase",function(str){return str.toUpperCase()}),Handlebars.registerHelper("eq",function(){let args=Array.prototype.slice.call(arguments,0,-1);return args.every(function(expression){return args[0]===expression})}),Handlebars.registerHelper("or",function(){return Array.prototype.slice.call(arguments,0,-1).reduce((x,y)=>x||y)}),Handlebars.registerHelper("and",function(){return Array.prototype.slice.call(arguments,0,-1).reduce((x,y)=>x&&y)}),Handlebars.registerHelper("chargenLoc",function(item){let localizedString=CONFIG.fbl.i18n[item];return localizedString||(localizedString=`SKILL.${item.toUpperCase().replace(/[\s-]/g,"_")}`),localizedString}),Handlebars.registerHelper("getType",function(item){return typeof(Number(item)||item)}),Handlebars.registerHelper("randomize",items=>items[Math.floor(Math.random()*items.length)]),Handlebars.registerHelper("fblLocalize",function(...args){return args.pop(),localizeString(args.join("."))}),Handlebars.registerHelper("ternary",function(conditional,string1,string2){return conditional?string1:string2}),Handlebars.registerHelper("count",function(array=[]){return Array.isArray(array)?array.length:0})}function normalize(data,defaultValue){return data?data.toLowerCase():defaultValue}var initializeHandlebars=()=>{registerHandlebarsHelpers(),preloadHandlebarsTemplates()};init_define_GLOBALPATHS();init_define_GLOBALPATHS();var FabulaUltimaCharacterSheet=class extends FabulaUltimaActorSheet{};function registerSheets(){Actors.unregisterSheet("core",ActorSheet),Actors.registerSheet("fabula-ultima",FabulaUltimaCharacterSheet,{types:["character"],makeDefault:!0})}Hooks.once("init",()=>{game.fbl={config:config_default},CONFIG.Actor.documentClass=ForbiddenLandsActor,CONFIG.Item.documentClass=ForbiddenLandsItem,CONFIG.JournalEntry.documentClass=ForbiddenLandsJournalEntry,CONFIG.fabula=config_default,CONFIG.Item.documentClass=FabulaUltimaItem,CONFIG.Combat.documentClass=FabulaUltimaCombat,registerSheets(),initializeHandlebars(),initializeEditorEnrichers(),modifyConfig()});
